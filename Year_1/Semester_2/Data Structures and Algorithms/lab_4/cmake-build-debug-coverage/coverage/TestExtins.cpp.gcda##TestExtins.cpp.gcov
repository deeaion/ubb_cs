        -:    0:Source:C:/Users/Deea/Desktop/DOCUMENTS/UNI/First year/Semester 2/Data Structures and Algorithms/lab_4/Teste/TestExtins.cpp
        -:    0:Graph:C:\Users\Deea\Desktop\DOCUMENTS\UNI\First year\Semester 2\Data Structures and Algorithms\lab_4\cmake-build-debug-coverage\CMakeFiles\lab_4.dir\Teste\TestExtins.cpp.gcno
        -:    0:Data:C:\Users\Deea\Desktop\DOCUMENTS\UNI\First year\Semester 2\Data Structures and Algorithms\lab_4\cmake-build-debug-coverage\CMakeFiles\lab_4.dir\Teste\TestExtins.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "TestScurt.h"
        -:    2:#include "../MD/MD.h"
        -:    3:#include "../Iterator/IteratorMD.h"
        -:    4:#include <assert.h>
        -:    5:#include <iostream>
        -:    6:#include <stdlib.h>
        -:    7:#include <vector>
        -:    8:
        -:    9:#include <exception>
        -:   10:
        -:   11:using namespace std;
        -:   12:
function _Z11testCreeazav called 0 returned 0% blocks executed 0%
    #####:   13:void testCreeaza() {
    #####:   14:	MD m;
    %%%%%:   14-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   15:	assert(m.vid() == true);
    %%%%%:   15-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   15-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   15-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   15-block  3
    %%%%%:   15-block  4
    #####:   16:	assert(m.dim() == 0);
    %%%%%:   16-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   16-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   16-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   16-block  3
    %%%%%:   16-block  4
        -:   17:
    #####:   18:	IteratorMD im = m.iterator();
    %%%%%:   18-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   19:	assert(im.valid() == false);
    %%%%%:   19-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   19-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   19-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   19-block  3
    %%%%%:   19-block  4
        -:   20:
    #####:   21:	for (int i = -10; i < 30; i++) {
    %%%%%:   21-block  0
    %%%%%:   21-block  1
    %%%%%:   21-block  2
branch  0 never executed
branch  1 never executed
    #####:   22:		assert(m.sterge(i, i) == false);
    %%%%%:   22-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   22-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   22-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   22-block  3
    %%%%%:   22-block  4
        -:   23:	}
    #####:   24:    vector<TValoare> v;
    %%%%%:   24-block  0
call    0 never executed
    #####:   25:	for (int i = -10; i < 30; i++) {
    %%%%%:   25-block  0
    %%%%%:   25-block  1
branch  0 never executed
branch  1 never executed
    #####:   26:            v=m.cauta(i);
    %%%%%:   26-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   26-block  1
call    3 never executed
call    4 never executed
    #####:   27:            assert(v.size()==0);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   27-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   27-block  1
    %%%%%:   27-block  2
        -:   28:	}
    #####:   29:}
    %%%%%:   29-block  0
call    0 never executed
call    1 never executed
    $$$$$:   29-block  1
call    2 never executed
    $$$$$:   29-block  2
call    3 never executed
        -:   30:
function _Z10testAdaugav called 0 returned 0% blocks executed 0%
    #####:   31:void testAdauga() {
    #####:   32:	MD m; //adaugam elemente
    %%%%%:   32-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   33:	for (int i = 0; i < 10; i++) {
    %%%%%:   33-block  0
    %%%%%:   33-block  1
    %%%%%:   33-block  2
branch  0 never executed
branch  1 never executed
    #####:   34:		m.adauga(i, i);
    %%%%%:   34-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   35:	}
    #####:   36:	assert(m.vid() == false);
    %%%%%:   36-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   36-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   36-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   36-block  3
    %%%%%:   36-block  4
    #####:   37:	assert(m.dim() == 10);
    %%%%%:   37-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   37-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   37-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   37-block  3
    %%%%%:   37-block  4
    #####:   38:	for (int i = -10; i < 20; i++) { //mai adaugam elemente [-10, 20), acum anumite elemente [0, 10) sunt de 2 ori
    %%%%%:   38-block  0
    %%%%%:   38-block  1
    %%%%%:   38-block  2
branch  0 never executed
branch  1 never executed
    #####:   39:		m.adauga(i, 2*i);
    %%%%%:   39-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   40:	}
    #####:   41:	assert(m.vid() == false);
    %%%%%:   41-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   41-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   41-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   41-block  3
    %%%%%:   41-block  4
    #####:   42:	assert(m.dim() == 40);
    %%%%%:   42-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   42-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   42-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   42-block  3
    %%%%%:   42-block  4
    #####:   43:	for (int i = -100; i < 100; i++) { //mai adaugam elemente [-100, 100), acum anumite elemente [0, 10) sunt de 3 ori, altele [-10, 0), si [10, 20) sunt de 2 ori
    %%%%%:   43-block  0
    %%%%%:   43-block  1
    %%%%%:   43-block  2
branch  0 never executed
branch  1 never executed
    #####:   44:		m.adauga(i, 3*i);
    %%%%%:   44-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   45:	}
    #####:   46:	assert(m.vid() == false);
    %%%%%:   46-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   46-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   46-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   46-block  3
    %%%%%:   46-block  4
    #####:   47:	assert(m.dim() == 240);
    %%%%%:   47-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   47-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   47-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   47-block  3
    %%%%%:   47-block  4
    #####:   48:	for (int i = -200; i < 200; i++) { //numaram de cate ori apar anumite elemente (inclusiv elemente inexistente)
    %%%%%:   48-block  0
    %%%%%:   48-block  1
branch  0 never executed
branch  1 never executed
    #####:   49:		vector<TValoare> v;
    %%%%%:   49-block  0
call    0 never executed
    #####:   50:		if (i < -100) {
branch  0 never executed
branch  1 never executed
    #####:   51:            v=m.cauta(i);
    %%%%%:   51-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   51-block  1
call    3 never executed
call    4 never executed
    #####:   52:			assert(v.size() == 0);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   52-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   52-block  1
    %%%%%:   52-block  2
        -:   53:		}
    #####:   54:		else if (i < -10) {
    %%%%%:   54-block  0
branch  0 never executed
branch  1 never executed
    #####:   55:            v=m.cauta(i);
    %%%%%:   55-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   55-block  1
call    3 never executed
call    4 never executed
    #####:   56:			assert(v.size() == 1);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   56-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   56-block  1
    %%%%%:   56-block  2
        -:   57:		}
    #####:   58:		else if (i < 0) {
    %%%%%:   58-block  0
branch  0 never executed
branch  1 never executed
    #####:   59:            v=m.cauta(i);
    %%%%%:   59-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   59-block  1
call    3 never executed
call    4 never executed
    #####:   60:			assert(v.size() == 2);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   60-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   60-block  1
    %%%%%:   60-block  2
        -:   61:		}
    #####:   62:		else if (i < 10) {
    %%%%%:   62-block  0
branch  0 never executed
branch  1 never executed
    #####:   63:            v=m.cauta(i);
    %%%%%:   63-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   63-block  1
call    3 never executed
call    4 never executed
    #####:   64:			assert(v.size() == 3);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   64-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   64-block  1
    %%%%%:   64-block  2
        -:   65:		}
    #####:   66:		else if (i < 20) {
    %%%%%:   66-block  0
branch  0 never executed
branch  1 never executed
    #####:   67:            v=m.cauta(i);
    %%%%%:   67-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   67-block  1
call    3 never executed
call    4 never executed
    #####:   68:			assert(v.size() == 2);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   68-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   68-block  1
    %%%%%:   68-block  2
        -:   69:		}
    #####:   70:		else if (i < 100) {
    %%%%%:   70-block  0
branch  0 never executed
branch  1 never executed
    #####:   71:            v=m.cauta(i);
    %%%%%:   71-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   71-block  1
call    3 never executed
call    4 never executed
    #####:   72:			assert(v.size() == 1);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   72-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   72-block  1
    %%%%%:   72-block  2
        -:   73:		}
        -:   74:		else {
    #####:   75:            v=m.cauta(i);
    %%%%%:   75-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   75-block  1
call    3 never executed
call    4 never executed
    #####:   76:			assert(v.size() == 0);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   76-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   76-block  1
    %%%%%:   76-block  2
        -:   77:		}
    #####:   78:	}
    %%%%%:   78-block  0
call    0 never executed
    $$$$$:   78-block  1
call    1 never executed
    #####:   79:	for (int i = 10000; i > -10000; i--) { //adaugam mult, si acum prima data adaugam valori mari, dupa aceea mici
    %%%%%:   79-block  0
    %%%%%:   79-block  1
    %%%%%:   79-block  2
branch  0 never executed
branch  1 never executed
    #####:   80:		m.adauga(i, 4*i);
    %%%%%:   80-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   81:	}
    #####:   82:	assert(m.dim()==20240);
    %%%%%:   82-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   82-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   82-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   82-block  3
    %%%%%:   82-block  4
    #####:   83:}
    %%%%%:   83-block  0
call    0 never executed
    $$$$$:   83-block  1
call    1 never executed
        -:   84:
function _Z10testStergev called 0 returned 0% blocks executed 0%
    #####:   85:void testSterge() {
    #####:   86:	MD m;
    %%%%%:   86-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   87:	for (int i = -100; i < 100; i++) { //stergem din colectie vida
    %%%%%:   87-block  0
    %%%%%:   87-block  1
    %%%%%:   87-block  2
branch  0 never executed
branch  1 never executed
    #####:   88:		assert(m.sterge(i, i) == false);
    %%%%%:   88-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   88-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   88-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   88-block  3
    %%%%%:   88-block  4
        -:   89:	}
    #####:   90:	assert(m.dim() == 0);
    %%%%%:   90-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   90-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   90-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   90-block  3
    %%%%%:   90-block  4
    #####:   91:	for (int i = -100; i < 100; i = i + 2) { //adaugam elemente din 2 in 2 (numere pare)
    %%%%%:   91-block  0
    %%%%%:   91-block  1
    %%%%%:   91-block  2
branch  0 never executed
branch  1 never executed
    #####:   92:		m.adauga(i, i);
    %%%%%:   92-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   93:	}
        -:   94:   //assert(m.sterge(2, 2) == true);
    #####:   95:	for (int i = -100; i < 2; i++) { //stergem tot (inclusiv elemente inexistente)
    %%%%%:   95-block  0
    %%%%%:   95-block  1
    %%%%%:   95-block  2
branch  0 never executed
branch  1 never executed
        -:   96:
    #####:   97:		if (i % 2 == 0) {
    %%%%%:   97-block  0
branch  0 never executed
branch  1 never executed
    #####:   98:			assert(m.sterge(i, i) == true);
    %%%%%:   98-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   98-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   98-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   98-block  3
    %%%%%:   98-block  4
    #####:   99:			assert(m.sterge(i, 2*i) == false);
    %%%%%:   99-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   99-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   99-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   99-block  3
    %%%%%:   99-block  4
        -:  100:		}
        -:  101:		else {
    #####:  102:			assert(m.sterge(i, i) == false);
    %%%%%:  102-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  102-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  102-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  102-block  3
    %%%%%:  102-block  4
    #####:  103:            assert(m.sterge(i, 2*i) == false);
    %%%%%:  103-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  103-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  103-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  103-block  3
    %%%%%:  103-block  4
        -:  104:		}
        -:  105:	}
    #####:  106:    for (int i = 2; i < 100; i++) { //stergem tot (inclusiv elemente inexistente)
    %%%%%:  106-block  0
    %%%%%:  106-block  1
    %%%%%:  106-block  2
branch  0 never executed
branch  1 never executed
        -:  107:
    #####:  108:        if (i % 2 == 0) {
    %%%%%:  108-block  0
branch  0 never executed
branch  1 never executed
    #####:  109:            assert(m.sterge(i, i) == true);
    %%%%%:  109-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  109-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  109-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  109-block  3
    %%%%%:  109-block  4
    #####:  110:            assert(m.sterge(i, 2*i) == false);
    %%%%%:  110-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  110-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  110-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  110-block  3
    %%%%%:  110-block  4
        -:  111:        }
        -:  112:        else {
    #####:  113:            assert(m.sterge(i, i) == false);
    %%%%%:  113-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  113-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  113-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  113-block  3
    %%%%%:  113-block  4
    #####:  114:            assert(m.sterge(i, 2*i) == false);
    %%%%%:  114-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  114-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  114-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  114-block  3
    %%%%%:  114-block  4
        -:  115:        }
        -:  116:    }
    #####:  117:	assert(m.dim() == 0);
    %%%%%:  117-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  117-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  117-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  117-block  3
    %%%%%:  117-block  4
        -:  118:
        -:  119:	//adaug multe elemente cu aceeasi cheie si apoi le sterg
    #####:  120:	for(int i = 0; i <= 100; i++)
    %%%%%:  120-block  0
    %%%%%:  120-block  1
    %%%%%:  120-block  2
branch  0 never executed
branch  1 never executed
    #####:  121:        m.adauga(0, i);
    %%%%%:  121-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  122:    //adaug un elemnet cu o alta cheie
    #####:  123:    m.adauga(1, 100);
    %%%%%:  123-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  124:    //sterg toate elementele cu cheia 0
    #####:  125:    for(int i = 0; i <= 100; i++)
    %%%%%:  125-block  0
    %%%%%:  125-block  1
    %%%%%:  125-block  2
branch  0 never executed
branch  1 never executed
    #####:  126:        assert(m.sterge(0, i) == true);
    %%%%%:  126-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  126-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  126-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  126-block  3
    %%%%%:  126-block  4
        -:  127:    //va trebui sa ramana un doar o perecheie (c, v) in dictionar - (1,100)
    #####:  128:    vector<TValoare> v;
    %%%%%:  128-block  0
call    0 never executed
    #####:  129:	v=m.cauta(1);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  129-block  0
call    3 never executed
call    4 never executed
    #####:  130:    assert(v.size()==1 && v.at(0)==100);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  130-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  130-block  1
branch  6 never executed
branch  7 never executed
    %%%%%:  130-block  2
call    8 never executed
branch  9 never executed
branch 10 never executed
    %%%%%:  130-block  3
    %%%%%:  130-block  4
    #####:  131:    v=m.cauta(0);
    %%%%%:  131-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  131-block  1
call    3 never executed
call    4 never executed
    #####:  132:    assert(v.size()==0);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  132-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  132-block  1
    %%%%%:  132-block  2
    #####:  133:    IteratorMD it=m.iterator();
    %%%%%:  133-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  134:    it.urmator();
    %%%%%:  134-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  135:    assert(it.valid()==false);
    %%%%%:  135-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  135-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  135-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  135-block  3
    %%%%%:  135-block  4
        -:  136:    //stergem si perechea (1,100)
    #####:  137:    assert(m.sterge(1,100)==true);
    %%%%%:  137-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  137-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  137-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  137-block  3
    %%%%%:  137-block  4
        -:  138:    //MD devine vid
    #####:  139:    assert(m.dim()==0);
    %%%%%:  139-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  139-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  139-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  139-block  3
    %%%%%:  139-block  4
    #####:  140:	for (int i = -100; i <= 100; i = i + 2) { //adaugam elemente din 2 in 2
    %%%%%:  140-block  0
    %%%%%:  140-block  1
    %%%%%:  140-block  2
branch  0 never executed
branch  1 never executed
    #####:  141:		m.adauga(i, 2*i);
    %%%%%:  141-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  142:	}
    #####:  143:	for (int i = 100; i > -100; i--) { //stergem descrescator (in ordine inversa fata de ordinea adaugarii)
    %%%%%:  143-block  0
    %%%%%:  143-block  1
    %%%%%:  143-block  2
branch  0 never executed
branch  1 never executed
    #####:  144:		if (i % 2 == 0) {
    %%%%%:  144-block  0
branch  0 never executed
branch  1 never executed
    #####:  145:  			assert(m.sterge(i, 3*i+1) == false);
    %%%%%:  145-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  145-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  145-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  145-block  3
    %%%%%:  145-block  4
    #####:  146:			assert(m.sterge(i, 2*i) == true);
    %%%%%:  146-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  146-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  146-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  146-block  3
    %%%%%:  146-block  4
        -:  147:		}
        -:  148:		else {
    #####:  149:			assert(m.sterge(i, 3*i+1) == false);
    %%%%%:  149-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  149-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  149-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  149-block  3
    %%%%%:  149-block  4
        -:  150:		}
        -:  151:	}
        -:  152:
    #####:  153:	assert(m.dim() == 1);
    %%%%%:  153-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  153-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  153-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  153-block  3
    %%%%%:  153-block  4
    #####:  154:	bool b = m.sterge(-100, -200);
    %%%%%:  154-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  155:	assert(b==true);
    %%%%%:  155-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  155-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  155-block  2
    %%%%%:  155-block  3
    #####:  156:	for (int i = -100; i < 100; i++) { //adaugam de 5 ori pe fiecare element
    %%%%%:  156-block  0
    %%%%%:  156-block  1
    %%%%%:  156-block  2
branch  0 never executed
branch  1 never executed
    #####:  157:	  if(i!=0){
    %%%%%:  157-block  0
branch  0 never executed
branch  1 never executed
    #####:  158:		m.adauga(i, i+1);
    %%%%%:  158-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  159:		m.adauga(i, 2*i+1);
    %%%%%:  159-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  160:		m.adauga(i, 3*i+1);
    %%%%%:  160-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  161:		m.adauga(i, 4*i+1);
    %%%%%:  161-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  162:		m.adauga(i, 5*i+1);
    %%%%%:  162-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  163:	  }
        -:  164:	}
    #####:  165:	assert(m.dim() == 995);
    %%%%%:  165-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  165-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  165-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  165-block  3
    %%%%%:  165-block  4
    #####:  166:	for (int i = -100; i < 100; i++) {
    %%%%%:  166-block  0
    %%%%%:  166-block  1
    %%%%%:  166-block  2
branch  0 never executed
branch  1 never executed
    #####:  167:       if(i!=0){
    %%%%%:  167-block  0
branch  0 never executed
branch  1 never executed
    #####:  168:            v=m.cauta(i);
    %%%%%:  168-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  168-block  1
call    3 never executed
call    4 never executed
    #####:  169:			assert(v.size() == 5);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  169-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  169-block  1
    %%%%%:  169-block  2
        -:  170:		}
        -:  171:	}
    #####:  172:	for (int i = -100; i < 100; i++) { //stergem o aparitie de la fiecare
    %%%%%:  172-block  0
    %%%%%:  172-block  1
    %%%%%:  172-block  2
branch  0 never executed
branch  1 never executed
    #####:  173:	  if (i!=0)
    %%%%%:  173-block  0
branch  0 never executed
branch  1 never executed
    #####:  174:		assert(m.sterge(i,i+1) == true);
    %%%%%:  174-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  174-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  174-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  174-block  3
    %%%%%:  174-block  4
        -:  175:	}
    #####:  176:	assert(m.dim() == 796);
    %%%%%:  176-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  176-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  176-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  176-block  3
    %%%%%:  176-block  4
    #####:  177:	for (int i = -100; i < 100; i++) {
    %%%%%:  177-block  0
    %%%%%:  177-block  1
    %%%%%:  177-block  2
branch  0 never executed
branch  1 never executed
    #####:  178:       if (i!=0){
    %%%%%:  178-block  0
branch  0 never executed
branch  1 never executed
    #####:  179:            v=m.cauta(i);
    %%%%%:  179-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  179-block  1
call    3 never executed
call    4 never executed
    #####:  180:			assert(v.size() == 4);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  180-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  180-block  1
    %%%%%:  180-block  2
        -:  181:		}
        -:  182:	}
    #####:  183:	for (int i = -200; i < 200; i++) { //stergem 5 aparitii de la elemente inexistente si existente (dar si acolo exista doar 4 aparitii)
    %%%%%:  183-block  0
    %%%%%:  183-block  1
    %%%%%:  183-block  2
branch  0 never executed
branch  1 never executed
    #####:  184:		if (i < -100 || i >= 100) {
    %%%%%:  184-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  184-block  1
branch  2 never executed
branch  3 never executed
    #####:  185:			assert(m.sterge(i, i) == false);
    %%%%%:  185-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  185-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  185-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  185-block  3
    %%%%%:  185-block  4
    #####:  186:			assert(m.sterge(i, i) == false);
    %%%%%:  186-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  186-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  186-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  186-block  3
    %%%%%:  186-block  4
    #####:  187:			assert(m.sterge(i, i) == false);
    %%%%%:  187-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  187-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  187-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  187-block  3
    %%%%%:  187-block  4
    #####:  188:			assert(m.sterge(i, i) == false);
    %%%%%:  188-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  188-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  188-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  188-block  3
    %%%%%:  188-block  4
    #####:  189:			assert(m.sterge(i, i) == false);
    %%%%%:  189-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  189-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  189-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  189-block  3
    %%%%%:  189-block  4
        -:  190:		}
        -:  191:		else
    #####:  192:          if (i!=0){
    %%%%%:  192-block  0
branch  0 never executed
branch  1 never executed
    #####:  193:			assert(m.sterge(i, i+1) == false);
    %%%%%:  193-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  193-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  193-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  193-block  3
    %%%%%:  193-block  4
    #####:  194:			assert(m.sterge(i, 2*i+1) == true);
    %%%%%:  194-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  194-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  194-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  194-block  3
    %%%%%:  194-block  4
    #####:  195:			assert(m.sterge(i, 3*i+1) == true);
    %%%%%:  195-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  195-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  195-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  195-block  3
    %%%%%:  195-block  4
    #####:  196:			assert(m.sterge(i, 4*i+1) == true);
    %%%%%:  196-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  196-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  196-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  196-block  3
    %%%%%:  196-block  4
    #####:  197:			assert(m.sterge(i, 5*i+1) == true);
    %%%%%:  197-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  197-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  197-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  197-block  3
    %%%%%:  197-block  4
        -:  198:		}
        -:  199:	}
    #####:  200:	assert(m.dim() == 0);
    %%%%%:  200-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  200-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  200-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  200-block  3
    %%%%%:  200-block  4
    #####:  201:	for (int i = -1000; i < 1000; i++) {
    %%%%%:  201-block  0
    %%%%%:  201-block  1
    %%%%%:  201-block  2
branch  0 never executed
branch  1 never executed
    #####:  202:            v=m.cauta(i);
    %%%%%:  202-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  202-block  1
call    3 never executed
call    4 never executed
    #####:  203:			assert(v.size() == 0);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  203-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  203-block  1
    %%%%%:  203-block  2
        -:  204:	}
    #####:  205:	int min = -200;
    #####:  206:	int max = 200;
    #####:  207:	while (min < max) { //adaugam elemente, pe 0 de 2 ori
    %%%%%:  207-block  0
    %%%%%:  207-block  1
branch  0 never executed
branch  1 never executed
    #####:  208:		m.adauga(min, min);
    %%%%%:  208-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  209:		m.adauga(max, max);
    %%%%%:  209-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  210:		min++;
    #####:  211:		max--;
    %%%%%:  211-block  0
        -:  212:	}
    #####:  213:	m.adauga(0, 100);
    %%%%%:  213-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  214:	m.adauga(0, 200);
    %%%%%:  214-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  215:	assert(m.dim() == 402);
    %%%%%:  215-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  215-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  215-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  215-block  3
    %%%%%:  215-block  4
        -:  216:    //v=m.cauta(6);
        -:  217://   assert(v.size() == 1);
    #####:  218:	for (int i = -30; i < 30; i++) { //stergem o parte dintre elemente
    %%%%%:  218-block  0
    %%%%%:  218-block  1
    %%%%%:  218-block  2
branch  0 never executed
branch  1 never executed
    #####:  219:        v=m.cauta(i);
    %%%%%:  219-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  219-block  1
call    3 never executed
call    4 never executed
    #####:  220:		if (i==0) assert(v.size() == 2);
branch  0 never executed
branch  1 never executed
    %%%%%:  220-block  0
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  220-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  220-block  2
    %%%%%:  220-block  3
    #####:  221:		  else assert(v.size() == 1);
    %%%%%:  221-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  221-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  221-block  2
    %%%%%:  221-block  3
    #####:  222:		if (i!=0) assert(m.sterge(i, i) == true);
    %%%%%:  222-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  222-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  222-block  2
branch  5 never executed
branch  6 never executed
    %%%%%:  222-block  3
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  222-block  4
    %%%%%:  222-block  5
    #####:  223:		if (i != 0) {
    %%%%%:  223-block  0
branch  0 never executed
branch  1 never executed
    #####:  224:            v=m.cauta(i);
    %%%%%:  224-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  224-block  1
call    3 never executed
call    4 never executed
    #####:  225:			assert(v.size() == 0);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  225-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  225-block  1
    %%%%%:  225-block  2
        -:  226:		}
        -:  227:	}
    #####:  228:	assert(m.dim() == 343);
    %%%%%:  228-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  228-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  228-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  228-block  3
    %%%%%:  228-block  4
    #####:  229: }
    %%%%%:  229-block  0
call    0 never executed
call    1 never executed
    $$$$$:  229-block  1
call    2 never executed
    $$$$$:  229-block  2
call    3 never executed
        -:  230:
        -:  231:
function _Z12testIteratorv called 0 returned 0% blocks executed 0%
    #####:  232:void testIterator() { // nu stim reprezentarea MD, putem testa doar anumite lucruri generale, nu stim in ce ordine vor fi afisate elementele.
    #####:  233:	MD m;
    %%%%%:  233-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  234:	IteratorMD im = m.iterator(); //iterator pe MD vid
    %%%%%:  234-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  235:	assert(im.valid() == false);
    %%%%%:  235-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  235-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  235-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  235-block  3
    %%%%%:  235-block  4
        -:  236:
    #####:  237:	for (int i = 0; i < 100; i++) {  //adaug 100 de elemente, fiecare e cheia si valoarea 33
    %%%%%:  237-block  0
    %%%%%:  237-block  1
    %%%%%:  237-block  2
branch  0 never executed
branch  1 never executed
    #####:  238:		m.adauga(33, 33);
    %%%%%:  238-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  239:	}
    #####:  240:	IteratorMD im2 = m.iterator(); //daca iterez doar 33 poate sa-mi dea iteratorul
    %%%%%:  240-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  241:	assert(im2.valid() == true);
    %%%%%:  241-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  241-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  241-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  241-block  3
    %%%%%:  241-block  4
    #####:  242:	for (int i = 0; i < 100; i++) {
    %%%%%:  242-block  0
    %%%%%:  242-block  1
    %%%%%:  242-block  2
branch  0 never executed
branch  1 never executed
    #####:  243:		TElem elem = im2.element();
    %%%%%:  243-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  244:		assert(elem.first == 33 & elem.second==33);
    %%%%%:  244-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  244-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  244-block  2
    %%%%%:  244-block  3
    #####:  245:		im2.urmator();
    %%%%%:  245-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  246:	}
    #####:  247:	assert(im2.valid() == false);
    %%%%%:  247-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  247-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  247-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  247-block  3
    %%%%%:  247-block  4
    #####:  248:	im2.prim(); //resetam pe primul elemente
    %%%%%:  248-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  249:	assert(im2.valid() == true);
    %%%%%:  249-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  249-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  249-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  249-block  3
    %%%%%:  249-block  4
    #####:  250:	for (int i = 0; i < 100; i++) {
    %%%%%:  250-block  0
    %%%%%:  250-block  1
    %%%%%:  250-block  2
branch  0 never executed
branch  1 never executed
    #####:  251:		TElem elem = im2.element();
    %%%%%:  251-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  252:		TElem elem2 = im2.element();
    %%%%%:  252-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  253:		assert(elem.first == 33 & elem.second==33);
    %%%%%:  253-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  253-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  253-block  2
    %%%%%:  253-block  3
    #####:  254:		assert(elem2.first == 33 & elem2.second==33);
    %%%%%:  254-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  254-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  254-block  2
    %%%%%:  254-block  3
    #####:  255:		im2.urmator();
    %%%%%:  255-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  256:	}
    #####:  257:	assert(im2.valid() == false);
    %%%%%:  257-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  257-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  257-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  257-block  3
    %%%%%:  257-block  4
        -:  258:
    #####:  259:	MD m2;
    %%%%%:  259-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  260:	for (int i = -100; i < 100; i++) { //adaug 200 de elemente, fiecare de 3 ori
    %%%%%:  260-block  0
    %%%%%:  260-block  1
    %%%%%:  260-block  2
branch  0 never executed
branch  1 never executed
    #####:  261:		m2.adauga(i, 2*i);
    %%%%%:  261-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  262:		m2.adauga(i, 3*i);
    %%%%%:  262-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  263:		m2.adauga(i, 4*i);
    %%%%%:  263-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  264:	}
    #####:  265:	IteratorMD im3 = m2.iterator();
    %%%%%:  265-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  266:	assert(im3.valid() == true); //nu avem garantia ca elementele afisate vor fi egale, (adica ca vom avea acelasi element de 3 ori consecutiv), testam doar ca sunt 600 de elemente
    %%%%%:  266-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  266-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  266-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  266-block  3
    %%%%%:  266-block  4
    #####:  267:	for (int i = 0; i < 600; i++) {
    %%%%%:  267-block  0
    %%%%%:  267-block  1
    %%%%%:  267-block  2
branch  0 never executed
branch  1 never executed
    #####:  268:		TElem e1 = im3.element();
    %%%%%:  268-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  269:		im3.urmator();
    %%%%%:  269-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  270:	}
    #####:  271:	assert(im3.valid() == false);
    %%%%%:  271-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  271-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  271-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  271-block  3
    %%%%%:  271-block  4
    #####:  272:	im3.prim();
    %%%%%:  272-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  273:	assert(im3.valid() == true);
    %%%%%:  273-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  273-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  273-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  273-block  3
    %%%%%:  273-block  4
    #####:  274:	MD m3;
    %%%%%:  274-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  275:	for (int i = 0; i < 200; i= i + 4) { //adaugam doar multipli de 4
    %%%%%:  275-block  0
    %%%%%:  275-block  1
    %%%%%:  275-block  2
branch  0 never executed
branch  1 never executed
    #####:  276:		m3.adauga(i, 5*i);
    %%%%%:  276-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  277:	}
    #####:  278:	IteratorMD im4 = m3.iterator();
    %%%%%:  278-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  279:	assert(im4.valid() == true);
    %%%%%:  279-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  279-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  279-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  279-block  3
    %%%%%:  279-block  4
    #####:  280:	int count = 0;
    #####:  281:	while (im4.valid()) { //fiecare element e multiplu de 4 si sunt in total 50 de elemente
    %%%%%:  281-block  0
    %%%%%:  281-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  281-block  2
branch  3 never executed
branch  4 never executed
    #####:  282:		TElem e = im4.element();
    %%%%%:  282-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  283:		assert(e.first % 4 == 0);
    %%%%%:  283-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  283-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  283-block  2
    %%%%%:  283-block  3
    #####:  284:		im4.urmator();
    %%%%%:  284-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  285:		count++;
    %%%%%:  285-block  0
        -:  286:	}
    #####:  287:	assert(count == 50);
    %%%%%:  287-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  287-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  287-block  2
    %%%%%:  287-block  3
    #####:  288:	MD m4; // adaugam niste elemente in Md
    %%%%%:  288-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  289:	for (int i = 0; i < 100; i++) {
    %%%%%:  289-block  0
    %%%%%:  289-block  1
    %%%%%:  289-block  2
branch  0 never executed
branch  1 never executed
    #####:  290:		m4.adauga(i, i);
    %%%%%:  290-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  291:		m4.adauga(i, i * (-2));
    %%%%%:  291-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  292:		m4.adauga(i, i * 2);
    %%%%%:  292-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  293:		m4.adauga(i, i / 2);
    %%%%%:  293-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  294:		m4.adauga(i, i / (-2));
    %%%%%:  294-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  295:	}
        -:  296:	//iteram peste MD si adaugam elementele intr-un vector
    #####:  297:	vector<TElem> elemente;
    %%%%%:  297-block  0
call    0 never executed
    #####:  298:	IteratorMD im5 = m4.iterator();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  299:	while (im5.valid()) {
    %%%%%:  299-block  0
    %%%%%:  299-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  299-block  2
branch  3 never executed
branch  4 never executed
    #####:  300:		TElem e = im5.element();
    %%%%%:  300-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  301:		elemente.push_back(e);
    %%%%%:  301-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  302:		im5.urmator();
    %%%%%:  302-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  303:	}
        -:  304:
    #####:  305:	assert(elemente.size() == m4.dim());
    %%%%%:  305-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  305-block  1
branch  4 never executed
branch  5 never executed
    %%%%%:  305-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  305-block  3
    %%%%%:  305-block  4
    #####:  306:	for (unsigned int i = 0; i < elemente.size(); i++) {
    %%%%%:  306-block  0
    %%%%%:  306-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  307:		TElem lastElem = elemente.at(elemente.size() - i  - 1);
    %%%%%:  307-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  308:        vector<TValoare> v1;
    %%%%%:  308-block  0
call    0 never executed
    #####:  309:        v1=m4.cauta(lastElem.first);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  309-block  0
call    3 never executed
call    4 never executed
    #####:  310:        assert(v1.size() !=0 );
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  310-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  310-block  1
    %%%%%:  310-block  2
    #####:  311:		bool b=m4.sterge(lastElem.first, lastElem.second);
    %%%%%:  311-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  312:		assert(b==true);
    %%%%%:  312-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  312-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  312-block  2
    %%%%%:  312-block  3
    #####:  313:	}
    %%%%%:  313-block  0
call    0 never executed
    $$$$$:  313-block  1
call    1 never executed
    #####:  314:}
    %%%%%:  314-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
    $$$$$:  314-block  1
call    5 never executed
    $$$$$:  314-block  2
call    6 never executed
    $$$$$:  314-block  3
call    7 never executed
    $$$$$:  314-block  4
call    8 never executed
    $$$$$:  314-block  5
call    9 never executed
        -:  315:
function _Z12testQuantityv called 0 returned 0% blocks executed 0%
    #####:  316:void testQuantity() {//scopul e sa adaugam multe date
    #####:  317:	MD m;
    %%%%%:  317-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  318:	for (int i = 10; i >= 1; i--) {
    %%%%%:  318-block  0
    %%%%%:  318-block  1
    %%%%%:  318-block  2
branch  0 never executed
branch  1 never executed
    #####:  319:		for (int j = -30000; j < 30000; j = j + i) {
    %%%%%:  319-block  0
    %%%%%:  319-block  1
    %%%%%:  319-block  2
branch  0 never executed
branch  1 never executed
    #####:  320:			m.adauga(j, j);
    %%%%%:  320-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  321:		}
        -:  322:	}
    #####:  323:	assert(m.dim() == 175739);
    %%%%%:  323-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  323-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  323-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  323-block  3
    %%%%%:  323-block  4
    #####:  324:	vector<TValoare> v;
    %%%%%:  324-block  0
call    0 never executed
    #####:  325:    v=m.cauta(-30000);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  325-block  0
call    3 never executed
call    4 never executed
    #####:  326:    assert(v.size() == 10);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  326-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  326-block  1
    %%%%%:  326-block  2
        -:  327:
    #####:  328:	IteratorMD im = m.iterator();
    %%%%%:  328-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  329:	assert(im.valid() == true);
    %%%%%:  329-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  329-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  329-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  329-block  3
    %%%%%:  329-block  4
    #####:  330:	for (int i = 0; i < m.dim(); i++) {
    %%%%%:  330-block  0
    %%%%%:  330-block  1
    %%%%%:  330-block  2
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  330-block  3
branch  3 never executed
branch  4 never executed
    #####:  331:		im.urmator();
    %%%%%:  331-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  332:	}
    #####:  333:	im.prim();
    %%%%%:  333-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  334:	while (im.valid()) { //fiecare element returnat de iterator trebuie sa fie in colectie si nrAparitii trebuie sa fie mai mare ca 0
    %%%%%:  334-block  0
    %%%%%:  334-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  334-block  2
branch  3 never executed
branch  4 never executed
    #####:  335:		TElem e = im.element();
    %%%%%:  335-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  336:        v=m.cauta(e.first);
    %%%%%:  336-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  336-block  1
call    3 never executed
call    4 never executed
    #####:  337:        assert(v.size() !=0 );
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  337-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  337-block  1
    %%%%%:  337-block  2
    #####:  338:		im.urmator();
    %%%%%:  338-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  339:	}
    #####:  340:	assert(im.valid() == false);
    %%%%%:  340-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  340-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  340-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  340-block  3
    %%%%%:  340-block  4
    #####:  341:}
    %%%%%:  341-block  0
call    0 never executed
call    1 never executed
    $$$$$:  341-block  1
call    2 never executed
    $$$$$:  341-block  2
call    3 never executed
        -:  342:
        -:  343:
function _Z13testAllExtinsv called 0 returned 0% blocks executed 0%
    #####:  344:void testAllExtins() {
    #####:  345:	testCreeaza();
    %%%%%:  345-block  0
call    0 never executed
    #####:  346:	testAdauga();
call    0 never executed
    #####:  347:   testSterge();
call    0 never executed
    #####:  348:   testIterator();
call    0 never executed
    #####:  349:	testQuantity();
call    0 never executed
    #####:  350:}
