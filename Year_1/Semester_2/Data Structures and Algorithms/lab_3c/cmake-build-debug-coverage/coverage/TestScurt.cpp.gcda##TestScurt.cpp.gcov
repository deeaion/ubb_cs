        -:    0:Source:C:/Users/Deea/Desktop/DOCUMENTS/UNI/First year/Semester 2/Data Structures and Algorithms/lab_3c/Tests/TestScurt.cpp
        -:    0:Graph:C:\Users\Deea\Desktop\DOCUMENTS\UNI\First year\Semester 2\Data Structures and Algorithms\lab_3c\cmake-build-debug-coverage\CMakeFiles\lab_3c.dir\Tests\TestScurt.cpp.gcno
        -:    0:Data:C:\Users\Deea\Desktop\DOCUMENTS\UNI\First year\Semester 2\Data Structures and Algorithms\lab_3c\cmake-build-debug-coverage\CMakeFiles\lab_3c.dir\Tests\TestScurt.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <assert.h>
        -:    2:
        -:    3:#include "../MDO/MDO.h"
        -:    4:#include "../Iterator/IteratorMDO.h"
        -:    5:
        -:    6:#include <exception>
        -:    7:#include <vector>
        -:    8:
        -:    9:using namespace std;
        -:   10:
function _Z8relatie1ii called 5 returned 100% blocks executed 75%
        5:   11:bool relatie1(TCheie cheie1, TCheie cheie2) {
        5:   12:	if (cheie1 <= cheie2) {
        5:   12-block  0
branch  0 taken 5 (fallthrough)
branch  1 taken 0
        5:   13:		return true;
        5:   13-block  0
        -:   14:	}
        -:   15:	else {
    #####:   16:		return false;
    %%%%%:   16-block  0
        -:   17:	}
        -:   18:}
        -:   19:
function _Z7testAllv called 1 returned 100% blocks executed 66%
        1:   20:void testAll(){
        1:   21:	MDO dictOrd = MDO(relatie1);
        1:   21-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   22:	assert(dictOrd.dim() == 0);
        1:   22-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   22-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   22-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   22-block  3
    %%%%%:   22-block  4
       1*:   23:	assert(dictOrd.vid());
        1:   23-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   23-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   23-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   23-block  3
    %%%%%:   23-block  4
        1:   24:    dictOrd.adauga(1,2);
        1:   24-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   25://   dictOrd.adauga(2,4);
        -:   26://    dictOrd.adauga(2,5);
        1:   27:    dictOrd.adauga(1,3);
        1:   27-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   28:    //dictOrd.adauga(1,4);
       1*:   29:    assert(dictOrd.dim() == 2);
        1:   29-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   29-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   29-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   29-block  3
    %%%%%:   29-block  4
       1*:   30:    assert(!dictOrd.vid());
        1:   30-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   30-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   30-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   30-block  3
    %%%%%:   30-block  4
        -:   31:
        1:   32:    vector<TValoare> v= dictOrd.cauta(1);
        1:   32-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   33: //   cout<<"AAAAAAAAA";
       1*:   34:    assert(v.size()==2);
        1:   34-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   34-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
        1:   34-block  2
    %%%%%:   34-block  3
        1:   35:    v= dictOrd.cauta(3);
        1:   35-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   35-block  1
call    3 returned 1
call    4 returned 1
       1*:   36:    assert(v.size()==0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   36-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
        1:   36-block  1
    %%%%%:   36-block  2
        1:   37:    IteratorMDO it = dictOrd.iterator();
        1:   37-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   38:    it.prim();
        1:   38-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   39:    //cout<<"UH";
        3:   40:    while (it.valid()){
        1:   40-block  0
        3:   40-block  1
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   40-block  2
branch  3 taken 2
branch  4 taken 1 (fallthrough)
        2:   41:    	TElem e = it.element();
        2:   41-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:   42:       // cout<<e.first<<":"<<e.second<<" \n";
        2:   43:    	it.urmator();
        2:   43-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:   44:    }
        -:   45:   // cout<<"F";
       1*:   46:    assert(dictOrd.sterge(1, 2) == true);
        1:   46-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   46-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   46-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   46-block  3
    %%%%%:   46-block  4
       1*:   47:    assert(dictOrd.sterge(1, 3) == true);
        1:   47-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   47-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   47-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   47-block  3
    %%%%%:   47-block  4
       1*:   48:    assert(dictOrd.sterge(2, 1) == false);
        1:   48-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   48-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   48-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   48-block  3
    %%%%%:   48-block  4
       1*:   49:    assert(dictOrd.vid());
        1:   49-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   49-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   49-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   49-block  3
    %%%%%:   49-block  4
        -:   50:
        1:   51:}
        1:   51-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   51-block  1
call    2 never executed
    $$$$$:   51-block  2
call    3 never executed
function _Z20testFrecventaValoarev called 1 returned 100% blocks executed 67%
        1:   52:void testFrecventaValoare()
        -:   53:{
        1:   54:    MDO dictOrd = MDO(relatie1);
        1:   54-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   55:    assert(dictOrd.ceaMaiFrecventaValoare()==-100);
        1:   55-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   55-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   55-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   55-block  3
    %%%%%:   55-block  4
        1:   56:    dictOrd.adauga(1,2);
        1:   56-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   57:    dictOrd.adauga(1,3);
        1:   57-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   58:    assert(dictOrd.ceaMaiFrecventaValoare()==3);
        1:   58-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   58-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   58-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   58-block  3
    %%%%%:   58-block  4
        1:   59:    dictOrd.adauga(2,2);
        1:   59-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   60:    assert(dictOrd.ceaMaiFrecventaValoare()==2);
        1:   60-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   60-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   60-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   60-block  3
    %%%%%:   60-block  4
        1:   61:    dictOrd.sterge(1,2);
        1:   61-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   62:    assert(dictOrd.ceaMaiFrecventaValoare()==3);
        1:   62-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   62-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   62-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   62-block  3
    %%%%%:   62-block  4
        1:   63:    dictOrd.sterge(1,3);
        1:   63-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   64:    assert(dictOrd.ceaMaiFrecventaValoare()==2);
        1:   64-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   64-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   64-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   64-block  3
    %%%%%:   64-block  4
        1:   65:    dictOrd.sterge(2,2);
        1:   65-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   66:    assert(dictOrd.ceaMaiFrecventaValoare()==-100);
        1:   66-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   66-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   66-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   66-block  3
    %%%%%:   66-block  4
        1:   67:}
        1:   67-block  0
call    0 returned 1
    $$$$$:   67-block  1
call    1 never executed
