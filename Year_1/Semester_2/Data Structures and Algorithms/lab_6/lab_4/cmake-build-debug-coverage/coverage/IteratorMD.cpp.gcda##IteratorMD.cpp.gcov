        -:    0:Source:C:/Users/Deea/Desktop/DOCUMENTS/UNI/First year/Semester 2/Data Structures and Algorithms/lab_4/Iterator/IteratorMD.cpp
        -:    0:Graph:C:\Users\Deea\Desktop\DOCUMENTS\UNI\First year\Semester 2\Data Structures and Algorithms\lab_4\cmake-build-debug-coverage\CMakeFiles\lab_4.dir\Iterator\IteratorMD.cpp.gcno
        -:    0:Data:C:\Users\Deea\Desktop\DOCUMENTS\UNI\First year\Semester 2\Data Structures and Algorithms\lab_4\cmake-build-debug-coverage\CMakeFiles\lab_4.dir\Iterator\IteratorMD.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "IteratorMD.h"
        -:    2:#include "../MD/MD.h"
        -:    3:#include <exception>
        -:    4:#include <stdexcept>
        -:    5:using namespace std;
        -:    6:/* Time Complexity: O(n + m)
        -:    7:   Initializing index and lungime takes constant time.
        -:    8: Cautam prima cheie nenula (O(m)).
        -:    9:*/
function _ZN10IteratorMDC2ERK2MD called 4 returned 100% blocks executed 90%
        4:   10:IteratorMD::IteratorMD(const MD& _md): md(_md) {
        4:   11:index=0;
        4:   12:lungime=md.dim();
        4:   12-block  0
call    0 returned 4
        4:   13:if(md.vid())
call    0 returned 4
branch  1 taken 0 (fallthrough)
branch  2 taken 4
    #####:   14:    return;
    %%%%%:   14-block  0
        4:   15:index_keys=0;
        4:   16:index_val=0;
       10:   17:while(md.keys[index_keys]== nullptr||md.keys[index_keys]== nullptr)
        4:   17-block  0
       10:   17-block  1
branch  0 taken 6
branch  1 taken 4 (fallthrough)
        4:   17-block  2
branch  2 taken 0
branch  3 taken 4 (fallthrough)
        -:   18:{
        6:   19:    index_keys++;
        6:   19-block  0
        -:   20:}
        4:   21:prim_index_keys=index_keys;
        4:   21-block  0
        -:   22:
        -:   23:}
        -:   24:/* Time Complexity: theta(1)
        -:   25: Return : val de la it curent
        -:   26:
        -:   27:*/
function _ZNK10IteratorMD7elementEv called 33 returned 100% blocks executed 100%
       33:   28:TElem IteratorMD::element() const{
       33:   29:    return md.keys[index_keys]->vals[index_val];
       33:   29-block  0
call    0 returned 33
        -:   30:}
        -:   31:/* Time Complexity: theta(1)
        -:   32: Return : verify if index si valid
        -:   33:
        -:   34:*/
function _ZNK10IteratorMD5validEv called 56 returned 100% blocks executed 100%
       56:   35:bool IteratorMD::valid() const {
       56:   36:	return this->index<this->lungime;
       56:   36-block  0
        -:   37:
        -:   38:}
        -:   39:/* Time Complexity: O(1) amortized
        -:   40: Sunt intr un hash multi map deci este amortizata.
        -:   41:Cautam urmatoarea poz valida. Si setam indexi corespunzand ei
        -:   42:
        -:   43:*/
function _ZN10IteratorMD7urmatorEv called 25 returned 100% blocks executed 81%
       25:   44:void IteratorMD::urmator() {
       25:   45:	if(!valid())
       25:   45-block  0
call    0 returned 25
branch  1 taken 0 (fallthrough)
branch  2 taken 25
    #####:   46:        throw std::exception();
    %%%%%:   46-block  0
call    0 never executed
call    1 never executed
call    2 never executed
       25:   47:    this->index++;
       25:   48:    if(md.keys[index_keys]->vals.size()==index_val+1)
       25:   48-block  0
call    0 returned 25
branch  1 taken 15 (fallthrough)
branch  2 taken 10
       15:   49:    {   index_keys++;
   799991:   50:        while(md.keys[index_keys]== nullptr)
       15:   50-block  0
   799991:   50-block  1
branch  0 taken 799980
branch  1 taken 11 (fallthrough)
        -:   51:        {
   799980:   52:            index_keys++;
   799980:   53:            if(index_keys==md.m)
   799980:   53-block  0
branch  0 taken 4 (fallthrough)
branch  1 taken 799976
        4:   54:                break;
        4:   54-block  0
        -:   55:        }
       15:   56:        if(index_keys==md.m)
       15:   56-block  0
branch  0 taken 4 (fallthrough)
branch  1 taken 11
        4:   57:            return;
        4:   57-block  0
       11:   58:        this->index_val=0;
       11:   58-block  0
        -:   59:    }
        -:   60:    else
        -:   61:    {
       10:   62:        this->index_val++;
       10:   62-block  0
        -:   63:    }
        -:   64:}
        -:   65:/* Time Complexity: theta(1)
        -:   66: Setting elements to initial values
        -:   67:*/
function _ZN10IteratorMD4primEv called 1 returned 100% blocks executed 100%
        1:   68:void IteratorMD::prim() {
        1:   69:	index=0;
        1:   70:    index_keys=prim_index_keys;
        1:   71:    index_val=0;
        1:   72:}
function _ZN10IteratorMD11revinoKPasiEi called 3 returned 67% blocks executed 83%
        3:   73:void IteratorMD::revinoKPasi(int k)
        -:   74:{
        3:   75:    if(k<=0||k>index)
        3:   75-block  0
branch  0 taken 3 (fallthrough)
branch  1 taken 0
        3:   75-block  1
branch  2 taken 1 (fallthrough)
branch  3 taken 2
        -:   76:    {
        1:   77:        throw std::invalid_argument("Invalid number");
        1:   77-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   77-block  1
call    4 returned 0
    $$$$$:   77-block  2
call    5 never executed
        -:   78:    }
        2:   79:    if(index_val>=k-1)
        2:   79-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        -:   80:    {
        1:   81:        index_val=index_val-k;
        1:   82:        index=index-k;
        1:   83:        return;
        1:   83-block  0
        -:   84:    }
        1:   85:    int vals_counted=0;
        1:   86:    vals_counted=index_val;
        1:   87:    index_keys--;
        1:   87-block  0
        -:   88:    while(1)
        -:   89:    {   //caut urmatoarea cheie din hash table
       1*:   90:        while(md.keys[index_keys]== nullptr)
        1:   90-block  0
        1:   90-block  1
branch  0 taken 0
branch  1 taken 1 (fallthrough)
    %%%%%:   90-block  2
        -:   91:        {
    #####:   92:           index_keys--;
    %%%%%:   92-block  0
        -:   93:        }
        -:   94:        //sunt la un index care are elemente
        1:   95:        index_val=md.keys[index_keys]->vals.size()-1;
        1:   95-block  0
call    0 returned 1
        1:   96:        if(index_val>=k-1)
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        -:   97:        {
        1:   98:            index_val=index_val-k+1;
        1:   99:            index=index-k;
        1:  100:            break;
        1:  100-block  0
        -:  101:        }
        -:  102:
        -:  103:    }
        -:  104:
        -:  105:
        -:  106:}
