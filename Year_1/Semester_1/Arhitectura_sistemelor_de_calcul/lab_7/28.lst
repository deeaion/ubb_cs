     1                                  bits 32 
     2                                  global start        
     3                                  extern exit              
     4                                  import exit msvcrt.dll    
     5                                  segment data use32 class=data
     6 00000000 2B34326138345835            s1 db '+','4','2','a','8','4','X','5'
     7                                      nr_es1 equ $-s1
     8 00000008 613435                      s2 db 'a','4','5'
     9                                      nr_es2 equ $-s2
    10 0000000B 06                          l db nr_es1/3+nr_es2+1
    11 0000000C 00<rept>                    d times (nr_es1/3+nr_es2+1) db 0
    12                                      
    13                                  ; our code starts here
    14                                  segment code use32 class=code
    15                                      start:
    16                                      ;Se dau doua siruri de caractere S1 si S2. Sa se construiasca sirul D prin concatenarea elementelor de pe pozitiile multiplu de 3 din sirul S1 cu elementele sirului S2 in ordine inversa.
    17                                      ;vom adauga intai pe pozitiile multiplu de 3 care pentru noi sunt unde k multiplu de 3 ex: esi+0 esi+3 esi+6 etc. Spunem ca esi deoarece vom folosi registrul esi pentru a retine siruriile. 
    18                                      ;edi va fi folosit ca si sirul destinatiei
    19 00000000 BE[00000000]                    mov esi,s1;il adaugam pe primul sir in esi
    20 00000005 BA08000000                      mov edx,nr_es1; salvam lungimea lui esi in edx
    21 0000000A BF[0C000000]                    mov edi,d; asa cum am mentionat mai devreme retinem sirul destinatie in edi
    22 0000000F 8B0D[0B000000]                  mov ecx,[l];
    23 00000015 BB00000000                      mov ebx,0; il folosim ca un index  pentru parcurgerea sirului 
    24 0000001A E32A                            jecxz final ;daca len(s1)+len(s2)=0 nu se intra in loop
    25 0000001C 83FA00                          cmp edx,0
    26 0000001F 7411                            jz adauga_el_s2;daca sirul s1 vid sarim la adaugarea celorlalte elemente
    27                                          adauga_el_s1:
    28 00000021 8A06                                mov al,[esi]; daca nu s-a intamplat nimic mai sus esi oricum incepe de la 0 deci daca nu se trece cu indexul de lungimea lui se efectueaza operatia in mod normal
    29 00000023 8807                                mov [edi],al; se muta in sirul destinatie
    30 00000025 83C303                              add ebx,3; il adunam pe 3 sa vedem in comparare daca adunat cu 3 indexul este mai mare ca lungimea s1
    31 00000028 39D3                                cmp ebx,edx
    32 0000002A 7F06                                jnle adauga_el_s2; daca diferenta este mai mica ca 0 se sare la adaugare restului de el
    33 0000002C 83C603                              add esi,3; ne mutam cu 3 pozitii ca stim deja ca ni se permite
    34 0000002F 47                                  inc edi; parcurgem sirul edi
    35 00000030 E2EF                                loop adauga_el_s1
    36                                              adauga_el_s2:
    37 00000032 47                                          inc edi;acum trecem la urmatoare pozitie din edi
    38 00000033 BE[08000000]                                mov esi,s2;vom muta in registrul esi al doilea sir pentru concatenare
    39                                                      repeta:
    40                                                      
    41 00000038 BB03000000                                  mov ebx,nr_es2; pentru a retine valoare lungimii sirului o salvam in registrul ebx
    42 0000003D 8A041E                                      mov al,[esi+ebx];aducem elementul de pe ultima pozitie din esi
    43 00000040 8807                                        mov [edi],al;il adaugam in sirul destinatie
    44 00000042 4E                                          dec esi;decrementam esi pentru o parcurgere corecta
    45 00000043 47                                          inc edi;trecem la urmatoarea poz din sir
    46 00000044 E2F2                                        loop repeta
    47                                                     final:
    48 00000046 6A00                             push    dword 0      
    49 00000048 FF15[00000000]                   call    [exit]      
