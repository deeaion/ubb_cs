     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit  
     8                                  import fopen msvcrt.dll
     9                                  extern fopen,fread
    10                                  import fread msvcrt.dll
    11                                  extern printf 
    12                                  import printf  msvcrt.dll          ; tell nasm that exit exists even if we won't be defining it
    13                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    14                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18 00000000 FFFFFFFF                des_f dd -1
    19 00000004 00000000<rept>          nr times 2 dd 0
    20 0000000C 6E722E61736D00          nume_fisier db "nr.asm",0
    21 00000013 7200                    mod_acces db "r",0
    22                                  len equ 100
    23 00000015 00000000<rept>          numbers times len dd 0
    24                                    
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28                                  
    29 00000000 68[13000000]                   push dword mod_acces
    30 00000005 68[0C000000]                   push dword nume_fisier
    31 0000000A FF15[00000000]                 call [fopen]
    32 00000010 83C408                         add esp,4*2
    33 00000013 A3[00000000]                   mov [des_f],eax
    34 00000018 FF35[00000000]                 push dword [des_f]
    35 0000001E 6A02                           push dword 2
    36 00000020 6A08                           push dword 8
    37 00000022 68[04000000]                   push dword nr
    38 00000027 FF15[00000000]                 call [fread]
    39 0000002D 83C410                         add esp,4*4
    40 00000030 8B1D[04000000]                 mov ebx,[nr]
    41                                         
    42                                         
    43                                         
    44                                         
    45                                          ; exit(0)
    46 00000036 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    47 00000038 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
