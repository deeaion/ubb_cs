// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace proto3 {
  public static partial class FestivalSv
  {
    static readonly string __ServiceName = "festivalServ.FestivalSv";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::proto3.Angajat> __Marshaller_festivalServ_Angajat = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::proto3.Angajat.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::proto3.LogInResponse> __Marshaller_festivalServ_LogInResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::proto3.LogInResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::proto3.FestivalResponse> __Marshaller_festivalServ_FestivalResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::proto3.FestivalResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::proto3.Bilet> __Marshaller_festivalServ_Bilet = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::proto3.Bilet.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::proto3.SpectacolDTO> __Marshaller_festivalServ_SpectacolDTO = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::proto3.SpectacolDTO.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::proto3.FestivalRequest> __Marshaller_festivalServ_FestivalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::proto3.FestivalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::proto3.StreamRequest> __Marshaller_festivalServ_StreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::proto3.StreamRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::proto3.Angajat, global::proto3.LogInResponse> __Method_login = new grpc::Method<global::proto3.Angajat, global::proto3.LogInResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "login",
        __Marshaller_festivalServ_Angajat,
        __Marshaller_festivalServ_LogInResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::proto3.Angajat, global::proto3.FestivalResponse> __Method_logout = new grpc::Method<global::proto3.Angajat, global::proto3.FestivalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "logout",
        __Marshaller_festivalServ_Angajat,
        __Marshaller_festivalServ_FestivalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::proto3.Bilet, global::proto3.FestivalResponse> __Method_sellTicket = new grpc::Method<global::proto3.Bilet, global::proto3.FestivalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "sellTicket",
        __Marshaller_festivalServ_Bilet,
        __Marshaller_festivalServ_FestivalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::proto3.SpectacolDTO, global::proto3.FestivalResponse> __Method_getSpectacole = new grpc::Method<global::proto3.SpectacolDTO, global::proto3.FestivalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getSpectacole",
        __Marshaller_festivalServ_SpectacolDTO,
        __Marshaller_festivalServ_FestivalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::proto3.FestivalRequest, global::proto3.FestivalResponse> __Method_getArtisti = new grpc::Method<global::proto3.FestivalRequest, global::proto3.FestivalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getArtisti",
        __Marshaller_festivalServ_FestivalRequest,
        __Marshaller_festivalServ_FestivalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::proto3.StreamRequest, global::proto3.FestivalResponse> __Method_NotifyStream = new grpc::Method<global::proto3.StreamRequest, global::proto3.FestivalResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "NotifyStream",
        __Marshaller_festivalServ_StreamRequest,
        __Marshaller_festivalServ_FestivalResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::proto3.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of FestivalSv</summary>
    [grpc::BindServiceMethod(typeof(FestivalSv), "BindService")]
    public abstract partial class FestivalSvBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::proto3.LogInResponse> login(global::proto3.Angajat request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::proto3.FestivalResponse> logout(global::proto3.Angajat request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::proto3.FestivalResponse> sellTicket(global::proto3.Bilet request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::proto3.FestivalResponse> getSpectacole(global::proto3.SpectacolDTO request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::proto3.FestivalResponse> getArtisti(global::proto3.FestivalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task NotifyStream(grpc::IAsyncStreamReader<global::proto3.StreamRequest> requestStream, grpc::IServerStreamWriter<global::proto3.FestivalResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(FestivalSvBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_login, serviceImpl.login)
          .AddMethod(__Method_logout, serviceImpl.logout)
          .AddMethod(__Method_sellTicket, serviceImpl.sellTicket)
          .AddMethod(__Method_getSpectacole, serviceImpl.getSpectacole)
          .AddMethod(__Method_getArtisti, serviceImpl.getArtisti)
          .AddMethod(__Method_NotifyStream, serviceImpl.NotifyStream).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, FestivalSvBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_login, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::proto3.Angajat, global::proto3.LogInResponse>(serviceImpl.login));
      serviceBinder.AddMethod(__Method_logout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::proto3.Angajat, global::proto3.FestivalResponse>(serviceImpl.logout));
      serviceBinder.AddMethod(__Method_sellTicket, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::proto3.Bilet, global::proto3.FestivalResponse>(serviceImpl.sellTicket));
      serviceBinder.AddMethod(__Method_getSpectacole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::proto3.SpectacolDTO, global::proto3.FestivalResponse>(serviceImpl.getSpectacole));
      serviceBinder.AddMethod(__Method_getArtisti, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::proto3.FestivalRequest, global::proto3.FestivalResponse>(serviceImpl.getArtisti));
      serviceBinder.AddMethod(__Method_NotifyStream, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::proto3.StreamRequest, global::proto3.FestivalResponse>(serviceImpl.NotifyStream));
    }

  }
}
#endregion
